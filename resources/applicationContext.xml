<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
  <!--使用PropertyPlaceholderConfigurer加载属性文件 -->
  <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations">
      <list>
        <value>classpath:jdbc.properties</value>
      </list>
    </property>
  </bean>

    <!--1.定义数据源组件 -->
  <bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName"
			value="${jdbc.driverClass}">
		</property>
		<property name="url"
			value="${jdbc.url}">
		</property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>

  <!-- 2.创建sqlSessionFactory工厂组件-->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
       <!-- 设置数据源组件 -->
       <property name="dataSource" ref="dataSource"></property>
       <!-- 加载mybatis配置文件:加载持久化操作 -->
       <property name="configLocation" value="classpath:mybatis-config.xml"></property>
  </bean>
  
  
   <!-- 使用MapperScannerConfigurer省略dao层实现类，自动生成实现类代理
	  注意:1.确保sql映射文件的命名空间值为接口的限定名，且方法名与sql映射文件的id值相同
	       2.生成动态实现类的bean对象的id值就是接口名称首字母小写
	 -->
	<bean  class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	   <!-- 指定工厂 -->
	   <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	    <!-- 指定dao层接口所在的包 -->
	    <property name="basePackage" value="com.dao"></property> 
	</bean>
  
  <!--注解实现ioc  添加扫描业务的配置 -->
<context:component-scan base-package="com.service.impl"></context:component-scan>


 <!--  配置Spring的事务管理器  --> 
	  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">   
	      <property name="dataSource" ref="dataSource"/> 
	   </bean>  

 <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>