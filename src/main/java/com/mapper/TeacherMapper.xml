<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.TeacherMapper">
	<resultMap id="BaseResultMap" type="com.entity.Teacher">
		<id column="teacherId" jdbcType="INTEGER" property="teacherid" />
		<result column="subjectId" jdbcType="INTEGER" property="subjectid" />
		<result column="teacher_name" jdbcType="INTEGER" property="teacherName" />
		<result column="teacherState" jdbcType="INTEGER" property="teacherstate" />
		<result column="teacher_tel" jdbcType="VARCHAR" property="teacherTel" />
		
		<result column="uName" jdbcType="VARCHAR" property="uname" />
		<result column="pwd" jdbcType="VARCHAR" property="pwd" />
		<result column="rId" jdbcType="INTEGER" property="rid" />

		<result column="subjectName" jdbcType="VARCHAR" property="subjectname" />
		<result column="className" jdbcType="VARCHAR" property="classname" />
		<result column="teacherclassId" jdbcType="VARCHAR" property="teacherclassid" />
		
		    <!-- 多对一关联映射 -->
    <association property="role" javaType="Role">
     	<id column="roleId" property="roleid" jdbcType="INTEGER" />
    	<result column="roleName" property="rolename" jdbcType="VARCHAR" />
    </association>
	</resultMap>

	<!-- 模糊查询通过老师姓名 -->
	<select id="getTeacherFuzzyQuery" resultMap="BaseResultMap">
		SELECT
		subject.`subjectName`,teacher.*,class.`classname`,teacherclass.`teacherclassId`
		FROM class
		INNER JOIN teacherclass ON
		class.`classId`=teacherclass.`classId`
		INNER JOIN teacher ON
		teacher.`teacherid`=teacherclass.`teacherid`
		INNER JOIN SUBJECT ON
		teacher.`subjectId`=SUBJECT.`subjectid`
		WHERE teacher.`teacher_name`
		like
		#{name}
	</select>

	<!-- 查询全部 -->
	<select id="getAllTeacher" resultMap="BaseResultMap">
		SELECT
		subject.`subjectName`,teacher.*,class.`classname`,teacherclass.`teacherclassId`
		FROM class
		INNER JOIN teacherclass ON
		class.`classId`=teacherclass.`classId`
		INNER JOIN teacher ON
		teacher.`teacherid`=teacherclass.`teacherid`
		INNER JOIN SUBJECT ON
		teacher.`subjectId`=SUBJECT.`subjectid`
	</select>

	<!-- 通过班级名称查询教师姓名和所教科目名称 -->
	<select id="getTname" resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT
		subject.`subjectName`,teacher.*,class.`classname`,teacherclass.`teacherclassId`
		FROM class
		INNER JOIN teacherclass ON
		class.`classId`=teacherclass.`classId`
		INNER JOIN teacher ON
		teacher.`teacherid`=teacherclass.`teacherid`
		INNER JOIN SUBJECT ON
		teacher.`subjectId`=SUBJECT.`subjectid`
		WHERE class.`className` =
		#{name}
	</select>

	<!-- 通过班级名称和科目名称查询教师姓名 -->
	<select id="getTname2" resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT
		subject.`subjectName`,teacher.*,class.`classname`,teacherclass.`teacherclassId`
		FROM class
		INNER JOIN teacherclass ON
		class.`classId`=teacherclass.`classId`
		INNER JOIN teacher ON
		teacher.`teacherid`=teacherclass.`teacherid`
		INNER JOIN SUBJECT ON
		teacher.`subjectId`=SUBJECT.`subjectid`
		WHERE
		subject.`subjectName`=#{1} AND class.`className`=#{0}
	</select>

	<!-- 查询单条 -->
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		SELECT
		subject.`subjectName`,teacher.*,class.`classname`,teacherclass.`teacherclassId`
		FROM class
		INNER JOIN teacherclass ON
		class.`classId`=teacherclass.`classId`
		INNER JOIN teacher ON
		teacher.`teacherid`=teacherclass.`teacherid`
		INNER JOIN SUBJECT ON
		teacher.`subjectId`=SUBJECT.`subjectid`
		where
		teacherclass.`teacherclassId` = #{teacherid,jdbcType=INTEGER}
	</select>

	<!-- 删除单条 -->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		teacher
		where teacherId = #{teacherid,jdbcType=INTEGER}
	</delete>

	<!-- 添加单条 -->
	<insert id="insert" parameterType="com.entity.Teacher"
		useGeneratedKeys="true" keyProperty="teacherid">
		insert into teacher
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="subjectid != null">
				subjectId,
			</if>
			<if test="teacherstate != null">
				teacherState,
			</if>
			<if test="teacherName != null">
				teacher_name,
			</if>
			<if test="teacherTel != null">
				teacher_tel,
			</if>
			<if test="teacherstate != null">
				teacherState,
			</if>
			<if test="uname != null">
				uName,
			</if>
			<if test="pwd != null">
				pwd,
			</if>
			<if test="rid != null">
				rId,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="subjectid != null">
				#{subjectid,jdbcType=INTEGER},
			</if>
			<if test="teacherstate != null">
				#{teacherstate,jdbcType=INTEGER},
			</if>
			<if test="teacherName != null">
				#{teacherName,jdbcType=VARCHAR},
			</if>
			<if test="teacherTel != null">
				#{teacherTel,jdbcType=VARCHAR},
			</if>
			<if test="uname != null">
				#{uname,jdbcType=VARCHAR},
			</if>
			<if test="pwd != null">
				#{pwd,jdbcType=VARCHAR},
			</if>
			<if test="rid != null">
				#{rid,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>

	<!-- 修改单条 -->
	<update id="updateByPrimaryKey" parameterType="com.entity.Teacher">
		update teacher
		<set>
			<if test="subjectid != null">
				subjectId = #{subjectid,jdbcType=INTEGER},
			</if>
			<if test="teacherstate != null">
				teacherState = #{teacherstate,jdbcType=INTEGER},
			</if>
			<if test="teacherName != null">
				teacher_name = #{teacherName,jdbcType=VARCHAR},
			</if>
			<if test="teacherTel != null">
				teacher_tel = #{teacherTel,jdbcType=VARCHAR},
			</if>
		</set>
		where teacherId = #{teacherid,jdbcType=INTEGER}
	</update>

	<!-- 查询所有教员 -->
  <select id="getAllTeacher2" resultMap="BaseResultMap">
  	select * from teacher
  </select>
  
  <!-- 教员连接角色查询 -->
  <select id="getAllTeacherAndRole" resultMap="BaseResultMap" parameterType="java.lang.Integer">
  	SELECT * FROM teacher LEFT JOIN role ON teacher.`rId`=role.`roleId` where teacher.`teacherId`=#{teacherid}
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.entity.Teacher" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 27 18:10:46 CST 2018.
    -->
    update teacher
    <set >
      <if test="subjectid != null" >
        subjectId = #{subjectid,jdbcType=INTEGER},
      </if>
      <if test="classid != null" >
        classId = #{classid,jdbcType=INTEGER},
      </if>
      <if test="teacherstate != null" >
        teacherState = #{teacherstate,jdbcType=INTEGER},
      </if>
      <if test="teacherName != null" >
        teacher_name = #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="teacherTel != null" >
        teacher_tel = #{teacherTel,jdbcType=VARCHAR},
      </if>
      <if test="uname != null" >
        uName = #{uname,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="rid != null" >
        rId = #{rid,jdbcType=INTEGER},
      </if>
    </set>
    where teacherId = #{teacherid,jdbcType=INTEGER}
  </update>
</mapper>